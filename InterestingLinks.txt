Optical Flow:
- Some info: https://nanonets.com/blog/optical-flow/
(SPARSE METHODS)
- OpenCVâ€™s implementation of Shi-Tomasi(goodFeatureToTrack): https://docs.opencv.org/3.0-beta/modules/imgproc/doc/feature_detection.html#goodfeaturestotrack
- Lucas-Kanade paper: https://pdfs.semanticscholar.org/6841/d3368d4dfb52548cd0ed5fef29199d14c014.pdf
- Other Lucas Kanade paper: http://robots.stanford.edu/cs223b04/algo_tracking.pdf
- OpenCV Lukas-Kanade documentation:https://docs.opencv.org/3.0-beta/modules/video/doc/motion_analysis_and_object_tracking.html#calcopticalflowpyrlk
(DENSE METHODS)
- Fanerback method paper: https://link.springer.com/content/pdf/10.1007%2F3-540-45103-X_50.pdf
- OpenCV Fanerback documentation:https://docs.opencv.org/3.0-beta/modules/video/doc/motion_analysis_and_object_tracking.html#calcopticalflowfarneback
(TUTORIAL FOLLOWED)
- OpenCV classes: https://docs.opencv.org/4.2.0/d2/d84/group__optflow.html
- OpenCV tutorial (Lukas-Kanade & dense methods): https://docs.opencv.org/3.4/d4/dee/tutorial_optical_flow.html

PCL code:
- From camera to PCL: https://github.com/eMrazSVK/JetsonSLAM/blob/master/pcl_testing.cpp
- PCL visualization: http://pointclouds.org/documentation/tutorials/cloud_viewer.php#cloud-viewer
                     http://docs.pointclouds.org/1.8.1/classpcl_1_1visualization_1_1_p_c_l_visualizer.html#ae4fd72dee3627d9f5e2cb5a71c053211

gperftools & KCachetools: documentation is very bad

RealSense T265: https://github.com/IntelRealSense/librealsense/blob/master/doc/t265.md
                https://github.com/IntelRealSense/librealsense/blob/master/doc/img/T265_orientation_axis.png

Eigen matrix: https://www.cc.gatech.edu/classes/AY2015/cs4496_spring/Eigen.html

